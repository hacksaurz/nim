[tox]
envlist = py{36,37-dev,py3}, lint, not-windows, pip-check-reqs, test, security
skipsdist = True
skip_missing_interpreters = {env:TOX_SKIP_MISSING_INTERPRETERS:True}
app = nim

[testenv]
use_develop = True

[testenv:lint]
commands =
    pycodestyle {[tox]app}
    flake8 --max-line-length 99 --max-complexity 12 {[tox]app}
    # Ignore return code of Pylint for now to not make the build fail.
    # TODO: Remove the dash once we've fixed all the issues.
    - pylint {[tox]app}
    # Ignore return code of pep257 for now to not make the build fail.
    # TODO: Remove the dash once we've fixed all the issues.
    - pep257
    mypy --ignore-missing-imports {[tox]app}
deps =
    flake8
    mypy
    pep257
    # There's an issue with pycodestyle 2.4.0 and flake8
    # See https://github.com/PyCQA/pycodestyle/issues/741
    pycodestyle < 2.4.0
    pylint

[testenv:not-windows]
platform = linux|darwin
commands =
    # eradicate doesn't run on Windows, raising the following error:
    # ERROR: invocation failed (errno 8), args: ['C:\\projects\\nim\\.tox\\lint\\Scripts\\eradicate', '--recursive', '.'], cwd: C:\projects\nim
    # [...]
    # OSError: [WinError 193] %1 is not a valid Win32 application
    eradicate --recursive .
    # safety doesn't run on Windows, raising the following error:
    # UnicodeEncodeError: 'charmap' codec can't encode characters in position 0-79: character maps to <undefined>
    # ERROR: InvocationError for command 'C:\\projects\\nim\\.tox\\security\\Scripts\\safety.EXE check -r requirements.txt' (exited with code 1)
    safety check -r requirements.txt
deps =
    eradicate
    safety

[testenv:pip-check-reqs]
commands =
    pip check
deps =
    -r{toxinidir}/requirements.txt

[testenv:test]
commands =
    # The -v option for pytest is required for the pytest-random-order package
    # to work.
    pytest -v --spec --doctest-modules --cov={[tox]app} --cov-report=term-missing {[tox]app} {posargs}
    # Remove the file created by pytest-readme after running pytest
    rm -f test_readme.py
deps =
    flask
    hypothesis
    mock
    pytest
    pytest-cov
    pytest-random-order
    pytest-readme
    pytest-remove-stale-bytecode
    pytest-spec
    pytest-travis-fold
    pytest-verbose-parametrize
passenv = TRAVIS  # Required for pytest-travis-fold
whitelist_externals = rm

[testenv:security]
commands =
    bandit -r {[tox]app} -c .bandit.yml
    pyt -f {[tox]app}/views.py
deps =
    bandit
    taint-analysis

[testenv:cleanup]
commands =
    rm -f .coverage
    rm -rf .tox/
    rm -rf .pytest_cache/
    rm -rf {[tox]app}.egg-info/
    find . -path '*/__pycache__/*' -delete
    find . -type d -name '__pycache__' -delete
whitelist_externals =
    find
    rm

[travis]
python =
    3.6: py36, lint, test, security
    3.7-dev: py37-dev, test
    # TODO: pypy3 doesn't seem to support type annotations. Once it does, make
    # tox run the test environment in pypy3
    pypy3: pypy3
